//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_attentionExperiment_Confirm;
        
        private static SteamVR_Action_Pose p_attentionExperiment_Pose;
        
        private static SteamVR_Action_Boolean p_attentionExperiment_HeadsetOnHead;
        
        private static SteamVR_Action_Vector2 p_attentionExperiment_ArrowDirection;
        
        private static SteamVR_Action_Vibration p_attentionExperiment_Haptic;
        
        public static SteamVR_Action_Boolean attentionExperiment_Confirm
        {
            get
            {
                return SteamVR_Actions.p_attentionExperiment_Confirm.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose attentionExperiment_Pose
        {
            get
            {
                return SteamVR_Actions.p_attentionExperiment_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean attentionExperiment_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_attentionExperiment_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 attentionExperiment_ArrowDirection
        {
            get
            {
                return SteamVR_Actions.p_attentionExperiment_ArrowDirection.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vibration attentionExperiment_Haptic
        {
            get
            {
                return SteamVR_Actions.p_attentionExperiment_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.attentionExperiment_Confirm,
                    SteamVR_Actions.attentionExperiment_Pose,
                    SteamVR_Actions.attentionExperiment_HeadsetOnHead,
                    SteamVR_Actions.attentionExperiment_ArrowDirection,
                    SteamVR_Actions.attentionExperiment_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.attentionExperiment_Confirm,
                    SteamVR_Actions.attentionExperiment_Pose,
                    SteamVR_Actions.attentionExperiment_HeadsetOnHead,
                    SteamVR_Actions.attentionExperiment_ArrowDirection};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.attentionExperiment_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.attentionExperiment_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.attentionExperiment_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.attentionExperiment_Confirm,
                    SteamVR_Actions.attentionExperiment_HeadsetOnHead};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[0];
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.attentionExperiment_ArrowDirection};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[0];
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.attentionExperiment_Confirm,
                    SteamVR_Actions.attentionExperiment_HeadsetOnHead,
                    SteamVR_Actions.attentionExperiment_ArrowDirection};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_attentionExperiment_Confirm = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/AttentionExperiment/in/Confirm")));
            SteamVR_Actions.p_attentionExperiment_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/AttentionExperiment/in/Pose")));
            SteamVR_Actions.p_attentionExperiment_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/AttentionExperiment/in/HeadsetOnHead")));
            SteamVR_Actions.p_attentionExperiment_ArrowDirection = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/AttentionExperiment/in/ArrowDirection")));
            SteamVR_Actions.p_attentionExperiment_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/AttentionExperiment/out/Haptic")));
        }
    }
}
